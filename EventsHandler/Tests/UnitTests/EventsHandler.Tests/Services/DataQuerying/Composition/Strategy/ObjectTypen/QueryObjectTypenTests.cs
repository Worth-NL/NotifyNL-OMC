// © 2024, Worth Systems.

using EventsHandler.Behaviors.Mapping.Models.POCOs.NotificatieApi;
using EventsHandler.Configuration;
using EventsHandler.Constants;
using EventsHandler.Services.DataQuerying.Composition.Strategy.ObjectTypen.Interfaces;
using EventsHandler.Services.DataQuerying.Composition.Strategy.ObjectTypen.v1;
using EventsHandler.Utilities._TestHelpers;

namespace EventsHandler.UnitTests.Services.DataQuerying.Composition.Strategy.ObjectTypen
{
    [TestFixture]
    public sealed class QueryObjectTypenTests
    {
        private readonly WebApiConfiguration _testConfiguration = ConfigurationHandler.GetValidAppSettingsConfiguration();

        [Test]
        public void IsValidType_ForMissingObjectTypeUri_ReturnsFalse()
        {
            // Arrange
            IQueryObjectTypen objectTypen = new QueryObjectTypen(this._testConfiguration);

            // Act
            bool actualResult = objectTypen.IsValidType(default);

            // Assert
            Assert.That(actualResult, Is.False);
        }
        
        [Test]
        public void IsValidType_ForDefaultObjectTypeUri_ReturnsFalse()
        {
            // Arrange
            IQueryObjectTypen objectTypen = new QueryObjectTypen(this._testConfiguration);

            var notification = new NotificationEvent
            {
                Attributes = new EventAttributes
                {
                    ObjectType = DefaultValues.Models.EmptyUri
                }
            };

            // Act
            bool actualResult = objectTypen.IsValidType(notification);

            // Assert
            Assert.That(actualResult, Is.False);
        }
    }
}